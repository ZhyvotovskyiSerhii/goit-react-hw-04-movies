{"version":3,"sources":["components/Reviews/Reviews.jsx"],"names":["Reviews","movieId","useState","reviews","setReviews","useEffect","fetchMovies","fetchMovieReviews","then","results","length","map","id","author","content"],"mappings":"mLA8BeA,UA3BC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,qBAAU,WACRC,IACGC,kBAAkBN,GAClBO,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBL,EAAWK,QACnC,CAACR,IAGF,mCACsB,IAAnBE,EAAQO,OACP,6BACGP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,+BACE,yCAAYD,KACZ,4BAAIC,MAFGF,QAOb","file":"static/js/10.7fb15fa5.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport fetchMovies from '../../services/movie-api';\n\nconst Reviews = ({ movieId }) => {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMovies\n      .fetchMovieReviews(movieId)\n      .then(({ results }) => setReviews(results));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length !== 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>Author: {author}</p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>not found reviews</p>\n      )}\n    </>\n  );\n};\n \nexport default Reviews;\n"],"sourceRoot":""}